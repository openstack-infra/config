#!/usr/bin/env bash

# This script is run every time eth0 comes up in the slave images, typically
# once when the VM starts. It does initial settings such as
#
# o hostname
# o gso disable (for the kernel bug)
# o /tmp/cache
# o Update nova.conf for qemu if vmx support is not available

# Also, for sub-slaves (VMs launched by scripts as additional workers)
# o Set http_proxy, https_proxy
# o Set ssl over http proxy (for ssh and scp)
# o Set no_proxy as well for localdomain traffic
# o Set proxy for apt-get

set -x

if [ -z $IFACE ]; then
    IFACE=$1 # In Centos, interface is an argument
fi

# We care only when eth0 comes up.
if [ "$IFACE" != "eth0" ]; then
    exit 0
fi

# Disable http proxy to access openstack metadata
unset http_proxy

HOSTNAME=`curl -s http://169.254.169.254/openstack/2012-08-10/meta_data.json | python -m json.tool | \grep \"name\": | awk -F '\"' '{print $4}'`
SLAVE_MASTER=`curl -s http://169.254.169.254/openstack/2012-08-10/meta_data.json | python -m json.tool | \grep \"slave-master\": | awk -F '\"' '{print $4}'`
PORT=6002 # 22

if [ -z $SLAVE_MASTER ]; then
    SLAVE_MASTER=localhost
fi

echo HOSTNAME $HOSTNAME, SLAVE_MASTER $SLAVE_MASTER

# Set various proxies
if [ "$SLAVE_MASTER" != "localhost" ]; then
    # Set http proxy in sub-slaves
    export http_proxy=http://$SLAVE_MASTER:3128 # squid
    export https_proxy=http://$SLAVE_MASTER:3128 # squid
    export ftp_proxy=http://$SLAVE_MASTER:3128 # squid

    proxy="export http_proxy=$http_proxy"
    echo "$proxy" > /etc/contrail_bashrc
    proxy="export https_proxy=$https_proxy"
    echo "$proxy" >> /etc/contrail_bashrc
    proxy="export ftp_proxy=$ftp_proxy"
    echo "$proxy" >> /etc/contrail_bashrc

    # no_proxy for the 192 subnet
    echo "no_proxy=localhost,127.0.0.1,.localdomain.com" >> /etc/contrail_bashrc

    # Set proxy for apt as well, if it is not already set.
    apt_proxy="Acquire::http::Proxy \"http://$SLAVE_MASTER:3128\";"
    grep --quiet "$apt_proxy" /etc/apt/apt.conf
    if [ "$?" != "0" ]; then
        echo "$apt_proxy" >> /etc/apt/apt.conf
    fi

    yum_proxy="proxy=http://$SLAVE_MASTER:3128"
    grep --quiet "$yum_proxy" /etc/yum.conf
    if [ "$?" != "0" ]; then
        echo "$yum_proxy" >> /etc/yum.conf
    fi

    # Set ssh-proxy for root and jenkins users.
    grep --quiet "ProxyCommand" /root/.ssh/config
    if [ "$?" != "0" ]; then
        echo ProxyCommand /usr/bin/corkscrew $SLAVE_MASTER 3128 %h %p >> /root/.ssh/config
    fi

    grep --quiet "ProxyCommand" /home/jenkins/.ssh/config
    if [ "$?" != "0" ]; then
        echo ProxyCommand /usr/bin/corkscrew $SLAVE_MASTER 3128 %h %p >> /home/jenkins/.ssh/config
        chown jenkins.jenkins /home/jenkins/.ssh/config
    fi
fi

# Work around for kernel tun/tap driver bug
# https://bugzilla.kernel.org/show_bug.cgi?id=60620
ssh root@jenkins.opencontrail.org ls /root/ci-test/skip_gso_disable
if [ "$?" != "0" ]; then
    /sbin/ethtool --offload eth0 tx off
    /sbin/ethtool --offload eth0 tso off
    /sbin/ethtool --offload eth0 ufo off
    /sbin/ethtool --offload eth0 gso off
fi

rm -rf /tmp/cache
ln -sf /home/jenkins/tmp/cache /tmp/cache

echo $HOSTNAME > /etc/hostname
service hostname restart

# Setup VM emulation if vmx support is not available
grep -q vmx /proc/cpuinfo
if [ "$?" != "0" ]; then
    if [ -f /etc/nova/nova-compute.conf ]; then
        perl -ni -e 's/libvirt_type=kvm/libvirt_type=qemu/g; print $_' /etc/nova/nova-compute.conf
        service nova-compute restart
    fi
fi

touch /tmp/contrail_ci_init_done
