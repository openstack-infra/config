#!/usr/bin/env python
#
# Gerrit-Launchpad Hook, inspired by https://github.com/hobbs/jirret
#
# Copyright (C) 2011 Catalyst IT (http://www.catalyst.net.nz)
# Copyright (C) 2011 Rackspace US, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Changed by James E. Blair <james.blair@rackspace.com> to add 
# config file parsing, and signed email with commands.

from getopt import getopt
from launchpadlib.launchpad import Launchpad
from launchpadlib.uris import LPNET_SERVICE_ROOT
import re
import subprocess
import sys, os


BASE_DIR = '/home/gerrit2/review_site'
GERRIT_CACHE_DIR = os.path.expanduser(os.environ.get('GERRIT_CACHE_DIR',
                                '~/.launchpadlib/cache'))
GERRIT_CREDENTIALS = os.path.expanduser(os.environ.get('GERRIT_CREDENTIALS',
                                '~/.launchpadlib/creds'))


def lp_tracker(launchpad, change_url, project, branch, submitter, commit):
    # Extract git log of all merged commits
    git_log = subprocess.Popen(['git', '--git-dir=' + BASE_DIR + '/git/' + project + '.git', 'log', '--no-merges', commit + '^1..' + commit], stdout=subprocess.PIPE).communicate()[0]

    # Find bug numbers referenced in the git log
    bug_regexp = r'([Bb]ug|[Ll][Pp])\s*[#:]?\s*(\d+)'
    tokens = re.split(bug_regexp, git_log)

    # Extract unique bug numbers
    bugs = []
    for token in tokens:
        if re.match('^\d+$', token) and (token not in bugs):
            bugs.append(token)
            update_bug(launchpad, token, change_url, project, commit, submitter, branch, git_log)


def update_bug(launchpad, bug_number, change_url, git_project, commit, submitter, branch, git_log):

    group, project = git_project.split('/')
    if group != 'openstack':
        project = 'openstack-ci'
    try:
        lp_bug = launchpad.bugs[bug_number]
        for lp_task in lp_bug.bug_tasks:
            if lp_task.bug_target_name == project:
                subject = 'Fix merged to %s (%s)' % (project, branch)
                git_url = 'http://github.com/%s/commit/%s' % (project, commit)
                body = '''Reviewed:  %s
Committed: %s
Submitter: %s
Branch:    %s\n''' % (change_url, git_url, submitter, branch)
                body = body + '\n' + git_log

                if branch == 'master':
                    lp_task.status = "Fix Committed"
                    lp_task.lp_save()
                else:
                    branch_name = branch.replace('/','-')
                    if branch_name.replace('-','').isalnum():
                        lp_bug.tags = lp_bug.tags + ["in-%s" % branch_name]
                        lp_bug.tags.append("in-%s" % branch_name)
                        lp_bug.lp_save()

                lp_bug.newMessage(subject=subject, content=body)
                break
    except KeyError:
        # Unknown bug
        pass


def main():
    # https://gerrit.googlecode.com/svn/documentation/2.1.6/config-hooks.html#change-merged
    gerrit_args = ['change=', 'change-url=', 'project=', 'branch=', 'submitter=', 'commit=']
    args, unused = getopt(sys.argv[1:], '', gerrit_args)

    change_url = project = branch = submitter = commit = None
    for argname, argv in args:
        if argname == '--change-url':
            change_url = argv
        elif argname == '--project':
            project = argv
        elif argname == '--branch':
            branch = argv
        elif argname == '--submitter':
            submitter = argv
        elif argname == '--commit':
            commit = argv

    launchpad = Launchpad.login_with('Gerrit User Sync', LPNET_SERVICE_ROOT,
                                     GERRIT_CACHE_DIR,
                                     credentials_file = GERRIT_CREDENTIALS,
                                     version='devel')

    if change_url and project and branch and submitter and commit:
        lp_tracker(launchpad, change_url, project, branch, submitter, commit)
    else:
        print 'Missing arguments'
    return 1

    return 0;

if __name__ == '__main__':
    sys.exit(main())
