- job-template:
    name: '{pipeline}-{injectedlib}-dsvm-{name}{branch-designator}'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 95
      - timestamps

    builders:
      - link-logs
      - net-info
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TIMEOUT=95
          export PROJECTS="{injectedrepo} $PROJECTS"
          export BRANCH_OVERRIDE={branch-override}
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          function gate_hook {{
              cd /opt/stack/new/$(basename {injectedrepo})
              remaining_time
              timeout -s 9 ${{REMAINING_TIME}}m ./tools/run_cross_tests.sh /opt/stack/new/{name} py27
          }}
          export -f gate_hook

          function post_test_hook {{
              cd /opt/stack/new/{name}
              mv nose_results.html $WORKSPACE/logs
              mv testr_results.html.gz $WORKSPACE/logs
              mv .testrepository/tmp* $WORKSPACE/logs
              mv subunit_log.txt.gz $WORKSPACE/logs
          }}
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - devstack-logs
      - console-log


- job-group:
    name: oslotest-cross-test

    injectedlib: oslotest
    injectedrepo: openstack/oslotest

    jobs:
      - '{pipeline}-{injectedlib}-dsvm-{name}{branch-designator}':
          pipeline: check
          node: 'devstack-precise || devstack-trusty'
          branch-designator: ''
          branch-override: default
      - '{pipeline}-{injectedlib}-dsvm-{name}{branch-designator}':
          pipeline: gate
          node: 'devstack-precise || devstack-trusty'
          branch-designator: ''
          branch-override: default

- job:
    # Run the AMQP 1.0 messaging tests under devstack, as the required
    # AMQP libraries must be installed
    name: 'check-oslo.messaging-dsvm-amqp1'
    node: 'devstack-trusty || devstack-centos7'

    builders:
      - link-logs
      - devstack-checkout
      - shell: |
          #!/bin/bash -xe
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_EXERCISES=0
          export RPC_MESSAGING_PROTOCOL=AMQP1

          function post_test_hook {
              cd $BASE/new/oslo.messaging
              # Run tests as the stack user to allow sudo+rootwrap.
              sudo chown -R stack:stack $BASE/new/oslo.messaging
              echo "Running oslo.messaging AMQP 1.0 test suite"
              sudo -H -u stack tox -eamqp1 -v
          }
          export -f post_test_hook
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh

    publishers:
      - test-results
      - devstack-logs
      - console-log
