# usig a freestyle project to work around jenkins bug:
# https://issues.jenkins-ci.org/browse/JENKINS-14193

- job-template:
    name: 'gate-{name}-maven-build'
    node: '{node}'
    tarball-site: '{tarball-site}'

    wrappers:
      - build-timeout:
          timeout: 30
      - timestamps

    builders:
      - gerrit-git-prep
      - shell: 'git log -2'
      - shell: |
          #!/bin/bash -xe
          /usr/local/jenkins/slave_scripts/version-properties.sh
          source version.properties
      - inject:
          properties-file: version.properties
      - maven-target:
          maven-version: Maven3
          pom: pom.xml
          goals: 'clean package'
          settings: m2/settings.xml
          properties:
            - project-version=${{PROJECT_VER}}

    publishers:
      - console-log

- job-template:
    name: 'post-{name}-maven-build-upload'
    node: '{node}'
    tarball-site: '{tarball-site}'

    wrappers:
      - build-timeout:
          timeout: 30
      - timestamps

    builders:
      - gerrit-git-prep
      - shell: 'git log -2'
      - shell: |
          #!/bin/bash -xe
          /usr/local/jenkins/slave_scripts/version-properties.sh
          source version.properties
      - inject:
          properties-file: version.properties
      - maven-target:
          maven-version: Maven3
          pom: pom.xml
          goals: 'clean package'
          settings: m2/settings.xml
          properties:
            - project-version=${{PROJECT_VER}}

    publishers:
      - console-log
      - scp:
          site: '{tarball-site}'
          files:
            - target: 'ci/{name}/${{PROJECT_VER}}/'
              source: '*/target/*,*/pom.xml'
              keep-hierarchy: true
              copy-after-failure: false

- job-template:
    name: 'post-{name}-maven-repository-deploy'
    node: '{node}'
    tarball-site: '{tarball-site}'
    maven-repository-id: '{maven-repository-id}'
    maven-repository-url: '{maven-repository-url}'

    wrappers:
      - build-timeout:
          timeout: 30
      - timestamps

    builders:
      - gerrit-git-prep
      - shell: 'git log -2'
      - shell: |
          #!/bin/bash -xe
          /usr/local/jenkins/slave_scripts/version-properties.sh
          source version.properties
      - inject:
          properties-file: version.properties
      - shell: |
          #!/bin/bash -xe
          wget -r -P artifacts/ -I ci/{name}/${{PROJECT_VER}} \
              -R index.html*,${{PROJECT_VER}} \
              -nH -np --cut-dirs=3 \
              {tarball-site}/ci/{name}/${{PROJECT_VER}}/

          set +x
          source "$HOME"/.maven-repository-creds
          set -x
          export MAVEN_REPOSITORY_USERNAME
          export MAVEN_REPOSITORY_PASSWORD

          for ARTIFACT_FOLDER in artifacts/* ; do
            mv "$ARTIFACT_FOLDER"/target/* "$ARTIFACT_FOLDER"
            rm -fr "$ARTIFACT_FOLDER"/target

            for ARTIFACT in $(ls "$ARTIFACT_FOLDER" | grep -v pom.xml) ; do
              mvn deploy:deploy-file -Dfile="$ARTIFACT_FOLDER"/"$ARTIFACT" \
                                     -DrepositoryId={maven-repository-id} \
                                     -DpomFile="$ARTIFACT_FOLDER"/pom.xml \
                                     -Durl={maven-repository-url} \
                                     -s m2/settings.xml
            done
          done

    publishers:
      - console-log

- job-template:
    name: '{name}-localrepo-upload'
    node: '{node}'

    wrappers:
      - build-timeout:
          timeout: 30
      - timestamps

    builders:
      - revoke-sudo
      - gerrit-git-prep
      - shell: |
          #!/bin/bash -xe
          /usr/local/jenkins/slave_scripts/version-properties.sh
          source version.properties
          mvn clean package -Dproject-version=$PROJECT_VER

    publishers:
      - war:
          site: '{tarball-site}'
          warfile: 'target/{name}-*.jar'
          target: 'tarballs/ci/{name}'
      - console-log

- job-template:
    name: '{name}-mavencentral-upload'
    node: pypi

    builders:
      - revoke-sudo
      - shell: |
          #!/bin/bash -xe
          TAG=`echo $ZUUL_REF | sed 's/^refs.tags.//'`
          FILENAME_BIN="{name}-$TAG.jar"

          # copy plugin artifacts from tarballs to local workspace
          rm -rf *.jar
          curl -o $FILENAME_BIN http://{tarball-site}/ci/{name}/$FILENAME_BIN

          # deploy to maven repository
          FILENAME_POM="{name}-$TAG.pom"
          /usr/local/jenkins/slave_scripts/mavencentral-upload.sh {name} $TAG \
              $FILENAME_POM $FILENAME_BIN

    publishers:
      - console-log

- job-group:
    name: maven-plugin-jobs
    jobs:
      - 'gate-{name}-build'
      - '{name}-localrepo-upload'
      - '{name}-mavencentral-upload'
