<VirtualHost <%= scope.lookupvar("::kibana::two::vhost_name") %>:<%= scope.lookupvar("::kibana::two::port") %>>
    ServerName <%= scope.lookupvar("::kibana::two::vhost_name") %>
    ServerAdmin <%= scope.lookupvar("::kibana::serveradmin") %>

    ErrorLog ${APACHE_LOG_DIR}/<%= scope.lookupvar("::kibana::two::vhost_name") %>-error.log

    LogLevel warn

    CustomLog ${APACHE_LOG_DIR}/<%= scope.lookupvar("::kibana::two::vhost_name") %>-access.log combined

    <IfModule mod_proxy.c>
        <% if proxy_elasticsearch == true %>
        # Proxy GETs for elasticsearch _aliases, .*/_status, .*/_search,
        # .*/_mapping, _cluster/health, and _nodes.
        RewriteEngine on
        RewriteCond %{REQUEST_METHOD} GET
        RewriteRule ^/elasticsearch/(_aliases|(.*/)?_status|(.*/)?_search|(.*/)?_mapping|_cluster/health|_nodes)$ http://<%= scope.lookupvar("::logstash::web::discover_nodes")[0] %>/$1 [P]
        RewriteCond %{REQUEST_METHOD} POST
        RewriteRule ^/elasticsearch/(_aliases|(.*/)?_search)$ http://<%= scope.lookupvar("::logstash::web::discover_nodes")[0] %>/$1 [P]
        RewriteCond %{REQUEST_METHOD} OPTIONS
        RewriteRule ^/elasticsearch/((.*/)?_search)$ http://<%= scope.lookupvar("::logstash::web::discover_nodes")[0] %>/$1 [P]
        <Proxy http://<%= scope.lookupvar("::kibana::two::discover_nodes")[0] %>/>
            ProxySet connectiontimeout=15 timeout=120
        </Proxy>
        ProxyPassReverse /elasticsearch/ http://<%= scope.lookupvar("::kibana::two::discover_nodes")[0] %>/
        <% end %>

        ProxyPass / http://127.0.0.1:5601/ retry=0
        ProxyPassReverse / http://127.0.0.1:5601/
    </IfModule>
</VirtualHost>
